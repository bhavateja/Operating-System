
alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

alias currentPCB S2;
currentPCB = READY_LIST + 32 * ((PTBR - 1024) / 8);	

if(sysCallNo == 8) then
	alias counter S3;
	alias PCBIdx S4;
	counter = 0;
	while(counter < 32) do
		if([READY_LIST + 32*counter + 1] == 0) then
			PCBIdx = counter;
			[READYLIST + 32*PCBIdx] = counter;
			break;
		endif;
	endwhile;

	if(counter == 32) then
		[physicalSP-2] = -1;
		ireturn;
	endif;

	alias validPageCount S5;
	alias currentPID S6;
	alias currPTBR;
	currentPID = (PTBR-1024)/8;
	currPTBR = PTBR + (8*currentPID);
	validPageCount = 0;
	counter = 0;
	while(counter < 4) do
		if([currPTBR + counter*2 + 1] == "01" || [currPTBR + counter*2 + 1] == "11") then
			validPageCount = validPageCount+1;
		endif;
		counter = counter+1;
	endwhile;

	alias i S7;
	i = 0;
	counter = 29;
	while(counter <= 63 && i<=validPageCount) do
		if([1280+counter] == 0) then
			i = i+1;
		endif;
		counter = counter+1;
	endwhile;

	if (counter == 64) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;

	validPageCount = validPageCount - 1;
	counter = 29;
	while(i<=validPageCount) do
		if([1280+counter] == 0) then
			[currPTBR + i*2] = counter;
			[currPTBR + i*2 + 1] = "01";
			[1280 + counter] = 1;
			i = i+1;
		endif;
		counter = counter+1;
	endwhile;

	while(i<3) do
		[currPTBR + i*2] = -1;
		[currPTBR + i*2 + 1] = "00";
		i = i+1;
	endwhile;

	while(counter < 64) do                      //////////////FOR STACK
		if([1280+counter] == 0) then
			[currPTBR + i*2] = counter;
			[currPTBR + i*2 + 1] = "01";			
			break;
		endif;
		counter = counter +1;
	endwhile;



endif;